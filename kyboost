#!/usr/bin/env zsh
# kyboost â€” Kydras OmniTerm God-mode installer/updater
# Cipher Notes: idempotent installer. Run as user (not root) on Kali/Debian.
set -euo pipefail
setopt NO_BANG_HIST

KS_HOME="$HOME/.kydras"
BIN_DIR="$HOME/.local/bin"
ZSHRC_KY="$HOME/.zshrc.kydras"
TMUX_CONF="$HOME/.tmux.conf.kydras"
MOTD="$KS_HOME/motd.txt"

mkdir -p "$KS_HOME" "$BIN_DIR" "$HOME/OmniTerm" "$HOME/.config" 

echo "# Cipher: installing Kydras OmniTerm assets..."

# 1) Write .zshrc.kydras (idempotent)
cat >| "$ZSHRC_KY" <<'EOF'
# = Kydras ~/.zshrc.kydras =
# Cipher Notes: Safe to source from ~/.zshrc
set -euo pipefail
setopt NO_BANG_HIST
export KYDRAS_HOME="${KYDRAS_HOME:-$HOME/.kydras}"
export PATH="$HOME/.local/bin:$PATH"

# Basic prompt: time, user@host, git branch
autoload -Uz vcs_info
precmd() { vcs_info }
zstyle ':vcs_info:git:*' formats '(%b)'

PROMPT='%F{yellow}%n@%m%f %F{cyan}%*%f %F{green}${vcs_info_msg_0_}%f %# '
RPROMPT='%F{magenta} Kydras%f'

# Aliases & helpers
alias ll='ls -lah --color=auto'
alias kygo='cd ~/OmniTerm || cd $HOME'
alias kyc='clear; ky_banner'
alias gpush='git add -A && git commit -m "[Kydras] update" || true && git push'
alias kypush='gpush'

# History hardening defaults (can be toggled by ky_stealth_on/off)
HISTFILE="${HISTFILE:-$HOME/.zsh_history}"
HISTSIZE=2000
SAVEHIST=2000
setopt append_history
setopt share_history
setopt extended_history

# Simple masked env helper
ky_export() {
  # usage: ky_export SECRET_NAME SECRET_VALUE
  if [[ $# -ne 2 ]]; then
    echo "usage: ky_export NAME VALUE"
    return 1
  fi
  read -s -p "Confirm export of $1? (y/N): " ans
  echo
  if [[ "$ans" == "y" || "$ans" == "Y" ]]; then
    export $1="$2"
    echo "Exported $1 (masked from history)."
  else
    echo "Aborted."
  fi
}

# Banner
ky_banner() {
  if [[ -f "$KYDRAS_HOME/banner.txt" ]]; then
    cat "$KYDRAS_HOME/banner.txt"
  else
    echo "Kydras OmniTerm - Cipher"
  fi
}

# source local overrides
[[ -f "$HOME/.zshrc.local" ]] && source "$HOME/.zshrc.local"
EOF

# 2) Write ky helper scripts
cat >| "$BIN_DIR/kygo" <<'EOF'
#!/usr/bin/env zsh
# kygo - quick nav
cd ~/OmniTerm || cd "$HOME"
EOF
chmod +x "$BIN_DIR/kygo"

cat >| "$BIN_DIR/kyinit" <<'EOF'
#!/usr/bin/env zsh
# kyinit - initialize a new Kydras project skeleton
set -euo pipefail
proj=${1:-new-kydras-project}
mkdir -p "$PWD/$proj"/{src,docs,assets,install}
cat > "$PWD/$proj/README.md" <<MD
# $proj
Generated by kyinit (Kydras)
MD
echo "Created $proj skeleton."
EOF
chmod +x "$BIN_DIR/kyinit"

cat >| "$BIN_DIR/kyzip" <<'EOF'
#!/usr/bin/env zsh
# kyzip <project-dir> -> creates project.zip containing source + added kydras metadata
set -euo pipefail
proj=${1:-.}
out="${proj##*/}.kydras.zip"
zip -r "$out" "$proj" -x '*.git*' || true
echo "Created $out"
EOF
chmod +x "$BIN_DIR/kyzip"

cat >| "$BIN_DIR/kypush" <<'EOF'
#!/usr/bin/env zsh
# kypush - git commit & push with Kydras defaults
set -euo pipefail
msg=${1:-"[Kydras] autopush"}
git add -A
git commit -m "$msg" || true
git push origin main || git push
EOF
chmod +x "$BIN_DIR/kypush"

# 3) Stealth on/off helpers (manipulate PATH + history)
cat >| "$BIN_DIR/ky_stealth_on" <<'EOF'
#!/usr/bin/env zsh
# ky_stealth_on - enable stealth (temporary)
set -euo pipefail
export _KY_OLD_PATH="$PATH"
export _KY_OLD_HISTFILE="${HISTFILE:-}"
export HISTFILE=/dev/null
export PATH="$HOME/.local/bin:$HOME/.local/sbin"
echo "Kydras stealth: ON (HISTFILE=/dev/null, PATH narrowed)"
EOF
chmod +x "$BIN_DIR/ky_stealth_on"

cat >| "$BIN_DIR/ky_stealth_off" <<'EOF'
#!/usr/bin/env zsh
# ky_stealth_off - disable stealth
set -euo pipefail
if [[ -n "${_KY_OLD_PATH:-}" ]]; then
  export PATH="$_KY_OLD_PATH"
fi
if [[ -n "${_KY_OLD_HISTFILE:-}" ]]; then
  export HISTFILE="$_KY_OLD_HISTFILE"
else
  export HISTFILE="$HOME/.zsh_history"
fi
unset _KY_OLD_PATH _KY_OLD_HISTFILE
echo "Kydras stealth: OFF"
EOF
chmod +x "$BIN_DIR/ky_stealth_off"

# 4) tmux config
cat >| "$TMUX_CONF" <<'EOF'
# ~/.tmux.conf.kydras
set -g mouse on
setw -g automatic-rename off
set -g history-limit 10000

# Status bar
set -g status-interval 2
set -g status-left-length 60
set -g status-right-length 150
set -g status-left '#[fg=yellow]Kydras #[fg=white]| #[fg=cyan]#H'
set -g status-right '#[fg=green]%Y-%m-%d %H:%M #[fg=white]| #[fg=magenta]#(whoami)'

# quick bindings
bind-key C-a send-prefix
bind r source-file ~/.tmux.conf.kydras \; display "Reloaded Kydras tmux conf"
EOF

# 5) Banner & motd (user-space)
cat >| "$KS_HOME/banner.txt" <<'EOF'
   _  __      _                     ____                 
  | |/ /___ _(_)___ _   ____ ___   / __ \____  ___  _____
  |   // _ `/ / __/| | / / -_) _ \ / / / __/ / _ \/ __/
  |_|\_\\_,_/_/\__/ | |/ /\__/_//_//_/ /_/\__/  \___/_/   
                |___/  /_/         OmniTerm - Kydras
EOF

cat >| "$MOTD" <<'EOF'
Kydras OmniTerm God-mode
User: $USER
Host: $(hostname)
Kernel: $(uname -sr)
EOF

# Optional: if sudo available, attempt best-effort /etc/motd.d install (non-fatal)
if sudo --non-interactive true 2>/dev/null; then
  sudo mkdir -p /etc/motd.d 2>/dev/null || true
  sudo cp -f "$MOTD" /etc/motd.d/50-kydras-motd 2>/dev/null || true
fi

# 6) tmux conf as default
cp -f "$TMUX_CONF" "$HOME/.tmux.conf" 2>/dev/null || true

# 7) Ensure .zshrc sources our config
if [[ -f "$HOME/.zshrc" ]]; then
  if ! grep -Fq "source $ZSHRC_KY" "$HOME/.zshrc"; then
    echo "" >> "$HOME/.zshrc"
    echo "# Load Kydras OmniTerm config" >> "$HOME/.zshrc"
    echo "source $ZSHRC_KY" >> "$HOME/.zshrc"
  fi
else
  echo "# ~/.zshrc created by kyboost" > "$HOME/.zshrc"
  echo "source $ZSHRC_KY" >> "$HOME/.zshrc"
fi

echo "Kydras OmniTerm installation complete."
echo "Useful commands: kygo kyinit kyzip kypush ky_stealth_on ky_stealth_off"
