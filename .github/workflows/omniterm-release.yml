name: omniterm-release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build (e.g. v1.0.12)'
        required: true

permissions:
  contents: write

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag || github.ref }}

      - name: Set up GitHub CLI
        run: sudo apt update && sudo apt install -y gh jq

      - name: Import GPG key
        if: ${{ secrets.GPG_PRIVATE_KEY != '' }}
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --import

      - name: Build .deb package
        run: |
          set -e
          VER="${{ github.event.inputs.tag || github.ref_name }}"
          VER="${VER#v}"
          echo "Building version $VER"
          make clean
          make deb DEB_VERSION="$VER"

      - name: Sign .deb package
        run: |
          set -e
          if ! command -v dpkg-sig >/dev/null 2>&1; then
            sudo apt-get install -y dpkg-sig || sudo apt-get install -y debsigs debsig-verify
          fi
          KEYID=$(gpg --list-secret-keys --keyid-format=long | awk '/^sec/{print $2}' | sed 's|.*/||' | head -n1 || true)
          for DEB in dist/*.deb; do
            if command -v dpkg-sig >/dev/null 2>&1 && [ -n "$KEYID" ]; then
              echo "Signing with dpkg-sig key $KEYID -> $DEB"
              dpkg-sig --sign builder -k "$KEYID" "$DEB"
            elif command -v debsigs >/dev/null 2>&1 && [ -n "$KEYID" ]; then
              echo "Signing with debsigs key $KEYID -> $DEB"
              debsigs --sign=origin -k "$KEYID" "$DEB"
            else
              echo "::warning::No signing tool/key available â€” .deb will be unsigned"
            fi
          done

      - name: Strict verify
        run: |
          set -e
          DEB=$(ls dist/*.deb | head -n1)
          echo "Verifying $DEB"
          if command -v dpkg-sig >/dev/null 2>&1; then
            dpkg-sig --verify "$DEB" | tee /tmp/v.txt
            grep -q 'GOODSIG' /tmp/v.txt || { echo "::error::dpkg-sig did not report GOODSIG"; exit 1; }
          elif ar t "$DEB" | grep -q '_gpgorigin'; then
            TMPDIR=$(mktemp -d)
            (cd "$TMPDIR" && ar x "$DEB" _gpgorigin && gpg --verify _gpgorigin)
          else
            echo "::error::unsigned .deb"; exit 1
          fi

      - name: Checksums + Upload
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.deb
            dist/SHA256SUMS.txt
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
